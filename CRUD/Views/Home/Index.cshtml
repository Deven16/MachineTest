@using CRUD.Models
@model PaginatedList<Product>

@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product List</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            window.onload = function () {
                alert("@TempData["SuccessMessage"]"); // ✅ Show popup
            };
        </script>
    }

    <div class="container mt-4">
        <h2 class="mb-3 text-center">Product List</h2>

        <p>
             
            <a href="/Product/Index" class="btn btn-primary">Product Master</a>
            <a href="/Category/Index" class="btn btn-primary">Category Master</a>
        </p>

        <table class="table table-bordered table-striped text-center">
            <thead class="table-dark">
                <tr>
                    <th>Product ID</th>
                    <th>Product Name</th>
                    <th>Category ID</th>
                    <th>Category Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.ProductId</td>
                        <td>@item.ProductName</td>
                        <td>@item.CategoryId</td>
                        <td>@item.Category?.CategoryName</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-between align-items-center">
            <div>
                @if (Model.HasPreviousPage)
                {
                    <a class="btn btn-primary" href="@Url.Action("Index", new { page = Model.PageIndex - 1 })">Previous</a>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>Previous</button>
                }
            </div>

            <span>Page @Model.PageIndex of @Model.TotalPages</span>

            <div>
                @if (Model.HasNextPage)
                {
                    <a class="btn btn-primary" href="@Url.Action("Index", new { page = Model.PageIndex + 1 })">Next</a>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>Next</button>
                }
            </div>
        </div>
    </div>
</body>
</html>
